version: "3.4"

services:
  app:
    # build:
    #   context: .
    #   dockerfile: "Dockerfile"
    # container_name: speech-service_app
    image: speech-service_app:conda
    volumes:
      - ./:/app
    restart: unless-stopped
    command: python3 app_flask.py runserver
    env_file:
      - .env
    expose:
      - ${APP_PORT}
    depends_on:
      - db
      - rabbitmq
    links:
      - rabbitmq
      - redis
      - db

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: root
    ports:
      - "15672:15672"
    volumes:
      - .docker/data/rabbitmq/data/:/var/lib/rabbitmq/
      - .docker/data/rabbitmq/log/:/var/log/rabbitmq/

  redis:
    image: redis:6-alpine
    restart: always
    # volumes:
    #   - .docker/data/redis:/data

  worker:
    image: speech-service_app:conda
    volumes:
      - ./:/app
    restart: unless-stopped
    env_file:
      - .env
    command: watchmedo auto-restart --directory=./ --pattern="*.py" --recursive -- celery -A task.run_celery:celery worker --loglevel INFO
    # command: celery -A task.run_celery:celery worker --loglevel INFO
    links:
      - rabbitmq
      - redis
    depends_on:
      - rabbitmq

  # Nginx service
  webserver:
    image: nginx:1.17-alpine
    restart: unless-stopped
    ports:
      - "${HTTP_PORT}:80"
    volumes:
      - .docker/nginx.conf:/etc/nginx/conf.d/default.conf

  # Postgres service
  db:
    image: postgres:11-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - .docker/data/db:/var/lib/postgresql/data

  flower:
    image: speech-service_app:conda
    volumes:
      - ./:/app
    restart: unless-stopped
    env_file:
      - .env
    command: celery -A task.run_celery:celery flower --loglevel INFO --port=8888 --basic_auth=root:root
    ports:
      - 8888:8888
    links:
      - rabbitmq
      - redis
    depends_on:
      - rabbitmq
      - worker
